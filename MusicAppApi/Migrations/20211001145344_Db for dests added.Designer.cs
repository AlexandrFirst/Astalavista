// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicAppApi.Models;

namespace MusicAppApi.Migrations
{
    [DbContext(typeof(MyDataContext))]
    [Migration("20211001145344_Db for dests added")]
    partial class Dbfordestsadded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MusicAppApi.Models.AudioFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlaceDescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 1, 17, 53, 43, 325, DateTimeKind.Local).AddTicks(4050));

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceDescriptionId");

                    b.ToTable("AudioFiles");
                });

            modelBuilder.Entity("MusicAppApi.Models.PhotoFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlaceDescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 1, 17, 53, 43, 347, DateTimeKind.Local).AddTicks(1094));

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceDescriptionId");

                    b.ToTable("PhotoFiles");
                });

            modelBuilder.Entity("MusicAppApi.Models.PlaceDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("PlaceDescription");
                });

            modelBuilder.Entity("MusicAppApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Mail")
                        .IsUnique()
                        .HasFilter("[Mail] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MusicAppApi.Models.VideoFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PlaceDescriptionId")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 10, 1, 17, 53, 43, 346, DateTimeKind.Local).AddTicks(8794));

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceDescriptionId");

                    b.ToTable("VideoFiles");
                });

            modelBuilder.Entity("MusicAppApi.Models.AudioFile", b =>
                {
                    b.HasOne("MusicAppApi.Models.PlaceDescription", "PlaceDescription")
                        .WithMany("Audios")
                        .HasForeignKey("PlaceDescriptionId");

                    b.Navigation("PlaceDescription");
                });

            modelBuilder.Entity("MusicAppApi.Models.PhotoFile", b =>
                {
                    b.HasOne("MusicAppApi.Models.PlaceDescription", "PlaceDescription")
                        .WithMany("Photos")
                        .HasForeignKey("PlaceDescriptionId");

                    b.Navigation("PlaceDescription");
                });

            modelBuilder.Entity("MusicAppApi.Models.PlaceDescription", b =>
                {
                    b.HasOne("MusicAppApi.Models.User", "Author")
                        .WithMany("PlaceDescriptions")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("MusicAppApi.Models.VideoFile", b =>
                {
                    b.HasOne("MusicAppApi.Models.PlaceDescription", "PlaceDescription")
                        .WithMany("Videos")
                        .HasForeignKey("PlaceDescriptionId");

                    b.Navigation("PlaceDescription");
                });

            modelBuilder.Entity("MusicAppApi.Models.PlaceDescription", b =>
                {
                    b.Navigation("Audios");

                    b.Navigation("Photos");

                    b.Navigation("Videos");
                });

            modelBuilder.Entity("MusicAppApi.Models.User", b =>
                {
                    b.Navigation("PlaceDescriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
